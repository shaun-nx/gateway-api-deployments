apiVersion: v1
kind: Namespace
metadata:
  name: gateway-grpc-example
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpcbin
  namespace: gateway-grpc-example
  labels:
    app: grpcbin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grpcbin
  template:
    metadata:
      labels:
        app: grpcbin
    spec:
      containers:
        - name: grpcbin
          # Using grpcbin as a minimal gRPC test server
          image: mlocati/grpcbin:latest
          ports:
            - containerPort: 9000 # gRPC over HTTP/2 (plaintext to backend)
          # Note: Gateway will terminate TLS for clients; backend stays plaintext gRPC
---
apiVersion: v1
kind: Service
metadata:
  name: grpcbin
  namespace: gateway-grpc-example
  labels:
    app: grpcbin
spec:
  selector:
    app: grpcbin
  ports:
    - name: grpc
      port: 9000
      targetPort: 9000
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: grpc-gw
  namespace: gateway-grpc-example
spec:
  gatewayClassName: nginx
  listeners:
    - name: https
      protocol: HTTPS
      port: 443
      hostname: grpc.127.0.0.1.nip.io
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: grpc-tls
---
apiVersion: gateway.networking.k8s.io/v1
kind: GRPCRoute
metadata:
  name: grpc-route
  namespace: gateway-grpc-example
spec:
  parentRefs:
    - name: grpc-gw
  hostnames:
    - grpc.127.0.0.1.nip.io
  rules:
    - backendRefs:
        - name: grpcbin
          port: 9000
